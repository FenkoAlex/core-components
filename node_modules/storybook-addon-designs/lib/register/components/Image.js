/** @jsx jsx */
import { Fragment, useMemo } from 'react';
import { css, jsx } from '@storybook/theming';
import { FlexBar, Separator } from '@storybook/components';
import { Pan } from './Pan';
import { ZoomButtons } from './ZoomButtons';
import { useZoom } from './hooks/useZoom';
export const ImagePreview = ({ config }) => {
    const zoom = useZoom(config.scale || 1, [config.scale]);
    const imageStyles = useMemo(() => ({
        transform: `scale(${zoom.scale})`
    }), [zoom.scale]);
    return (jsx("div", { css: $container },
        jsx(FlexBar, { border: true },
            jsx(Fragment, { key: "left" },
                jsx("p", null,
                    jsx("b", null, "Image")),
                jsx(Separator, null),
                jsx(ZoomButtons, { onReset: zoom.resetZoom, onZoomIn: zoom.zoomIn, onZoomOut: zoom.zoomOut }))),
        jsx(Pan, { css: $preview, defaultValue: config.offset },
            jsx("img", { css: $image, src: config.url, style: imageStyles }))));
};
export default ImagePreview;
const $container = css `
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: stretch;
`;
const $preview = css `
  flex-grow: 1;
`;
const $image = css `
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;

  pointer-events: none;
  border-radius: 1px;
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);
`;
